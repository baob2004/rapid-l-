void draw_ball(int &x, int &y,struct ball b){
	setcolor(RED);
	setfillstyle(SOLID_FILL, RED);
	circle(b.td.x,b.td.y,20);
	floodfill(b.td.x, b.td.y, RED);
}
void draw_bar1(int &x, int &y,struct bar1 br){
	setcolor(WHITE);
	setfillstyle(SOLID_FILL, WHITE);
	bar(br.td.x,br.td.y,br.td.x+150,br.td.y+25);
	br.tt = UP;
	floodfill(br.td.x, br.td.y, WHITE);
}
void draw_bar2(int &x, int &y,struct bar2 br){
	bar(br.td.x,br.td.y,br.td.x+150,br.td.y+25);
	br.tt = UP;
}
void draw_bar3(int &x, int &y,struct bar3 br){
	bar(br.td.x,br.td.y,br.td.x+150,br.td.y+25);
	br.tt = UP;
}
void draw_fence_head(int &x,int &y,struct fence_head &f){
	line(f.td.x, f.td.y, f.td.x+20, f.td.y);
    line(f.td.x+20, f.td.y, f.td.x+10, f.td.y+20);
    line(f.td.x+10, f.td.y+20, f.td.x, f.td.y);
    
    line(f.td.x+25, f.td.y, f.td.x+20+25, f.td.y);
    line(f.td.x+20+25, f.td.y, f.td.x+10+25, f.td.y+20);
    line(f.td.x+10+25, f.td.y+20, f.td.x+25, f.td.y);

    line(f.td.x+25+25, f.td.y, f.td.x+20+25+25, f.td.y);
    line(f.td.x+20+25+25, f.td.y, f.td.x+10+25+25, f.td.y+20);
    line(f.td.x+10+25+25, f.td.y+20, f.td.x+25+25, f.td.y);
    
    line(f.td.x+25+25+25, f.td.y, f.td.x+20+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25, f.td.y, f.td.x+10+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25, f.td.y+20, f.td.x+25+25+25, f.td.y);
    
    line(f.td.x+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25, f.td.y);
    
    line(f.td.x+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25, f.td.y);
    
    line(f.td.x+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25, f.td.y);
    
    line(f.td.x+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25, f.td.y);
    
    line(f.td.x+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25, f.td.y);
    
    line(f.td.x+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25, f.td.y);
    
  	line(f.td.x+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
 	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25 ,f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    
	line(f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
    line(f.td.x+20+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y, f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20);
    line(f.td.x+10+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y+20, f.td.x+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25+25, f.td.y);
}
void draw_fence(int &x,int &y,struct fence &f){
	setcolor(RED);
    	line(f.td.x, f.td.y, f.td.x+10, f.td.y+20);
   		line(f.td.x+10, f.td.y+20, f.td.x-10,  f.td.y+20);
    	line(f.td.x-10, f.td.y+20, f.td.x,  f.td.y);
		 	
    	line(f.td.x+20, f.td.y, f.td.x+10+20, f.td.y+20);
   		line(f.td.x+10+20, f.td.y+20, f.td.x-10+20,  f.td.y+20);
    	line(f.td.x-10+20, f.td.y+20, f.td.x+20,  f.td.y);

	  	line(f.td.x+20+20, f.td.y, f.td.x+10+20+20, f.td.y+20);
   		line(f.td.x+10+20+20, f.td.y+20, f.td.x-10+20+20,  f.td.y+20);
    	line(f.td.x-10+20+20, f.td.y+20, f.td.x+20+20,  f.td.y);

	  	line(f.td.x+20+20+20, f.td.y, f.td.x+10+20+20+20, f.td.y+20);
   		line(f.td.x+10+20+20+20, f.td.y+20, f.td.x-10+20+20+20,  f.td.y+20);
    	line(f.td.x-10+20+20+20, f.td.y+20, f.td.x+20+20+20,  f.td.y);
	
	  	line(f.td.x+20+20+20+20, f.td.y, f.td.x+10+20+20+20+20, f.td.y+20);
   		line(f.td.x+10+20+20+20+20, f.td.y+20, f.td.x-10+20+20+20+20,  f.td.y+20);
    	line(f.td.x-10+20+20+20+20, f.td.y+20, f.td.x+20+20+20+20,  f.td.y);
}
void draw_heart(int &heart){
	setcolor(RED);
	setfillstyle(SOLID_FILL, RED);
	circle(50,50,13);
	floodfill(50, 50, RED);	
	setcolor(WHITE);	
	
	settextstyle(SANS_SERIF_FONT, HORIZ_DIR, 3);
    outtextxy(76,50-15,"x");   	
    
    if(heart == 3){ outtextxy(98, 50-15, "3");
	}else if(heart == 2){outtextxy(98, 50-15, "2"); 
	}else if(heart == 1){outtextxy(98, 50-15, "1"); 
	}else if(heart == 0){outtextxy(98, 50-15, "0"); 
	}
	
	setcolor(WHITE);	
	settextstyle(SANS_SERIF_FONT, HORIZ_DIR, 5);
    outtextxy(250,35,"RAPID ROLL");  
}
